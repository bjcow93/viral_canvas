{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./js/binds.js","webpack:///./js/checks.js","webpack:///./js/entry.js","webpack:///./js/game_view.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;AClFA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,uCAAuC,OAAO,IAAI,OAAO,IAAI,OAAO,IAAI,UAAU;;AAElF;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH,4BAA4B;AAC5B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;ACvEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,mCAAmC,UAAU,OAAO,UAAU;AAC9D;AACA;AACA;AACA,oCAAoC,WAAW,OAAO,WAAW;AACjE;AACA;AACA;AACA,yCAAyC,gBAAgB,OAAO,gBAAgB;AAChF;AACA;AACA;AACA,oCAAoC,WAAW,OAAO,WAAW;AACjE;AACA;AACA;AACA,mCAAmC,UAAU,OAAO,UAAU;AAC9D;AACA;AACA;AACA,yCAAyC,oBAAoB,OAAO,WAAW;AAC/E;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;AC/CA;AACA;;AAEA;AACA;AACA,CAAC;;;;;;;;;;;;ACLD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,qBAAqB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,wBAAwB;AAC3C;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA,sBAAsB,qBAAqB;AAC3C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,SAAS;;AAET,sBAAsB,yBAAyB;AAC/C,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,mCAAmC,wBAAwB;AAC3D;;AAEA,iCAAiC,sBAAsB;AACvD;;AAEA;AACA;AACA;AACA;AACA;;AAEA","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./js/entry.js\");\n","const GameView = require('./game_view.js');\nconst checks = require('./checks.js');\n\nconst bindControls = () => {\n  const restart = document.getElementById(\"restart-button\");\n  const play = document.getElementById(\"play-button\");\n  const pause = document.getElementById(\"pause-button\");\n\n  let gameView;\n\n  restart.addEventListener(\"click\", e => {\n    if (checks()) return;\n\n    document.getElementById(\"myCanvas\").remove();\n\n    const width = document.getElementById(\"width\").value;\n    const height = document.getElementById(\"height\").value;\n    const bgColor = document.getElementById(\"background-color\").value;\n    const bgOpacity = document.getElementById(\"background-opacity\").value;\n\n    const canvas = document.createElement(\"canvas\");\n    canvas.id = \"myCanvas\";\n    canvas.width = width;\n    canvas.height = height;\n\n    const rgb = getRGB(bgColor);\n\n    canvas.style = `background: rgba(${rgb[0]}, ${rgb[1]}, ${rgb[2]}, ${bgOpacity}`;\n\n    document.querySelector(\"body\").appendChild(canvas);\n\n    const numCircles = document.getElementById(\"numCircles\").value;\n    const radius = document.getElementById(\"radius\").value;\n    const speed = document.getElementById(\"speed\").value;\n    const numEndCircles = document.getElementById(\"endCircles\").value;\n    const startColor = document.getElementById(\"start-color\").value;\n    const endColor = document.getElementById(\"end-color\").value;\n\n    const options = {\n      numCircles,\n      radius,\n      speed,\n      startColor,\n      endColor,\n      numEndCircles\n    };\n\n    gameView = new GameView(options);\n    gameView.start();\n  });\n\n  play.addEventListener(\"click\", () => {\n    gameView.paused = false;\n  });\n\n  pause.addEventListener(\"click\", () => {\n    gameView.paused = true;\n  });\n\n  gameView = new GameView({});\n  gameView.start();\n};\n\nconst getRGB = hex => {\n  const colors = [];\n  colors.push(parseInt(hex.substr(1,2), 16));\n  colors.push(parseInt(hex.substr(3,2), 16));\n  colors.push(parseInt(hex.substr(5,2), 16));\n  return colors;\n};\n\nmodule.exports = bindControls;\n","const MIN_WIDTH = 100;\nconst MAX_WIDTH = 1300;\nconst MIN_HEIGHT = 100;\nconst MAX_HEIGHT = 700;\nconst MIN_NUM_CIRCLES = 1;\nconst MAX_NUM_CIRCLES = 1000;\nconst MIN_RADIUS = 1;\nconst MAX_RADIUS = 20;\nconst MIN_SPEED = 1;\nconst MAX_SPEED = 200;\nconst MIN_NUM_END_CIRCLES = 1;\n\nconst checks = () => {\n  const width = parseInt(document.getElementById(\"width\").value);\n  const height = parseInt(document.getElementById(\"height\").value);\n  const numCircles = parseInt(document.getElementById(\"numCircles\").value);\n  const radius = parseInt(document.getElementById(\"radius\").value);\n  const speed = parseInt(document.getElementById(\"speed\").value);\n  const numEndCircles = parseInt(document.getElementById(\"endCircles\").value);\n\n  if (width < MIN_WIDTH || width > MAX_WIDTH) {\n    alert(`Width must be between ${MIN_WIDTH} and ${MAX_WIDTH}`);\n    return true;\n  }\n  if (height < MIN_HEIGHT || height > MAX_HEIGHT) {\n    alert(`Height must be between ${MIN_HEIGHT} and ${MAX_HEIGHT}`);\n    return true;\n  }\n  if (numCircles < MIN_NUM_CIRCLES || numCircles > MAX_NUM_CIRCLES) {\n    alert(`Num Circles must be between ${MIN_NUM_CIRCLES} and ${MAX_NUM_CIRCLES}`);\n    return true;\n  }\n  if (radius < MIN_RADIUS || radius > MAX_RADIUS) {\n    alert(`Radius must be between ${MIN_RADIUS} and ${MAX_RADIUS}`);\n    return true;\n  }\n  if (speed < MIN_SPEED || speed > MAX_SPEED) {\n    alert(`Speed must be between ${MIN_SPEED} and ${MAX_SPEED}`);\n    return true;\n  }\n  if (numEndCircles < MIN_NUM_END_CIRCLES || numEndCircles > numCircles) {\n    alert(`End Circles must be between ${MIN_NUM_END_CIRCLES} and ${numCircles}`);\n    return true;\n  }\n  return false;\n};\n\nmodule.exports = checks;\n","const GameView = require('./game_view.js');\nconst bindControls = require('./binds.js');\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  bindControls();\n});\n","const NUM_CIRCLES = 100;\nconst RADIUS = 10;\nconst START_COLOR = new paper.Color(\"red\");\nconst END_COLOR = new paper.Color(\"blue\");\nconst NUM_END_CIRCLES = 1;\nconst SPEED = 10;\nconst SPEED_SCALE = 10;\n\nclass GameView {\n  constructor(options) {\n    this.numCircles = parseInt(options.numCircles) || NUM_CIRCLES;\n    this.radius = parseInt(options.radius) || RADIUS;\n    this.startColor = options.startColor ?  new paper.Color(options.startColor) : START_COLOR;\n    this.endColor = options.endColor ?  new paper.Color(options.endColor) : END_COLOR;\n    this.numEndCircles = parseInt(options.numEndCircles) || NUM_END_CIRCLES;\n    this.speed = (parseInt(options.speed) || SPEED) / SPEED_SCALE;\n    this.startTime = new Date().getTime();\n    this.paused = false;\n  }\n\n  start() {\n    paper.setup(\"myCanvas\");\n    this.createCircles();\n    this.animateCircles();\n  }\n\n  createCircles() {\n    for (let i = 0; i < this.numCircles; i++) {\n      let centerX = Point.random().x * (view.size.width - 2 * this.radius) + this.radius;\n      let centerY = Point.random().y * (view.size.height - 2 * this.radius) + this.radius;\n      let center = new Point(centerX, centerY);\n      let circle = new Path.Circle(center, this.radius);\n      circle.fillColor = this.startColor;\n      circle.direction = new Point(this.speed, this.speed);\n      circle.direction.angle = Math.random() * 360;\n    }\n\n    for (let i = 0; i < this.numEndCircles; i++) {\n      project.activeLayer.children[i].fillColor = this.endColor;\n    }\n  }\n\n  animateCircles() {\n    view.onFrame = () => {\n      if (this.paused) {\n      } else {\n        const children = project.activeLayer.children;\n        for(let i = 0; i < children.length; i++) {\n          var child = children[i];\n          this.updatePosition(child);\n        }\n\n        const startCircles = [], endCircles = [];\n        children.forEach(circle => {\n          if (circle.fillColor.toString() === this.startColor.toString()) {\n            startCircles.push(circle);\n          } else {\n            endCircles.push(circle);\n          }\n        });\n\n        for(let i = 0; i < startCircles.length; i++) {\n          for(let j = 0; j < endCircles.length; j++) {\n            const startCircle = startCircles[i];\n            const endCircle = endCircles[j];\n            this.checkCollision(startCircle, endCircle);\n          }\n        }\n\n        this.updateDisplay(startCircles.length, endCircles.length);\n      }\n    };\n  }\n\n  checkCollision(start, end) {\n    const xDist = start.position.x - end.position.x;\n    const yDist = start.position.y - end.position.y;\n    const dist = (xDist * xDist) + (yDist * yDist);\n\n    if (dist <= (2 * this.radius) * (2 * this.radius)) {\n      start.fillColor = this.endColor;\n    }\n  }\n\n  updatePosition(circle) {\n    const dx = circle.direction.x;\n    const dy = circle.direction.y;\n\n    if (circle.position.x + dx + this.radius > view.bounds.right) {\n      circle.direction.x = -circle.direction.x;\n    }\n\n    if (circle.position.x + dx - this.radius < 0) {\n      circle.direction.x = -circle.direction.x;\n    }\n\n    if (circle.position.y + dy > view.bounds.height - this.radius) {\n      circle.direction.y = -circle.direction.y;\n    }\n\n    if (circle.position.y + dy - this.radius < 0) {\n      circle.direction.y = -circle.direction.y;\n    }\n\n    circle.position.x += dx;\n    circle.position.y += dy;\n  }\n\n  updateDisplay(numStart, numEnd) {\n    const numStartLeft = document.getElementById(\"start-circles-left\");\n    const numEndLeft = document.getElementById(\"end-circles-left\");\n    const timer = document.getElementById(\"timer\");\n\n    numStartLeft.style = `color: ${this.startColor.toCSS()}`;\n    numStartLeft.innerText = numStart;\n\n    numEndLeft.style = `color: ${this.endColor.toCSS()}`;\n    numEndLeft.innerText = numEnd;\n\n    if (numEnd < this.numCircles) {\n      timer.innerText = new Date().getTime() - this.startTime + \"ms\";\n    }\n  }\n}\n\nmodule.exports = GameView;\n"],"sourceRoot":""}